service: user-management
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${env:STAGE, 'dev'}
  region: ${env:AWS_REGION, 'us-east-1'}
  lambdaHashingVersion: 20201221
  tags:
    CreatedBy: Kaveri Jeevanantham
  environment:
    USER_TABLE: users-${self:provider.stage}
    LOG_LEVEL: ${env:LOG_LEVEL, 'trace'}
    USER_EMAIL_ID_INDEX: user_email_id_index
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.USER_TABLE}"

functions:
  registerUser:
    handler: api/UserApi.registerUser
    events:
      - http:
          path: /
          method: post
  getUser:
    handler: api/UserApi.getUser
    events:
      - http:
          path: /{id}
          method: get
  updateUser:
    handler: api/UserApi.updateUser
    events:
      - http:
          path: /{id}
          method: patch
  deleteUser:
    handler: api/UserApi.deleteUser
    events:
      - http:
          path: /{id}
          method: delete
  loginUser:
    handler: api/UserApi.loginUser
    events:
      - http:
          path: /login
          method: post

resources:
  Resources:
    UsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.USER_TABLE}
        AttributeDefinitions:
          - 
            AttributeName: id
            AttributeType: S
          - 
            AttributeName: emailId
            AttributeType: S
        KeySchema:
          - 
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.USER_EMAIL_ID_INDEX}
            KeySchema:
              - AttributeName: emailId
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  dotenv:
    include: []
