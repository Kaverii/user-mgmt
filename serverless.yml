service: user-mgmt
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  tags:
    CreatedBy: Kaveri Jeevanantham
  stage: dev
  region: us-east-1
  environment:
    USER_MGMT_TABLE: User-${opt:stage, self:provider.stage}
    LOG_LEVEL: ${opt:logLevel}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.USER_MGMT_TABLE}"

functions:
  registerUser:
    handler: api/UserMgmtApi.registerUser
    events:
      - http:
          path: /register
          method: post
  getUser:
    handler: api/UserMgmtApi.getUser
    events:
      - http:
          path: /{emailId}
          method: get
  updateUser:
    handler: api/UserMgmtApi.updateUser
    events:
      - http:
          path: /{emailId}
          method: put
  deleteUser:
    handler: api/UserMgmtApi.deleteUser
    events:
      - http:
          path: /{emailId}
          method: delete

resources:
  Resources:
    UsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - 
            AttributeName: emailId
            AttributeType: S
        KeySchema:
          - 
            AttributeName: emailId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.USER_MGMT_TABLE}
